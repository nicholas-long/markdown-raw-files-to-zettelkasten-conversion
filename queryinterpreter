#!/usr/bin/awk -f
BEGIN {
  inter = "./queryinterpreter"
  diag = "/dev/stderr"
  print "interpreter", inter > diag
}
function interpretme(subcommand) { # interpret the rest of this line as a subcommand. return the command string to read and close.
  "mktemp" | getline tf
  close("mktemp")
  #print "interpret", subcommand
  print subcommand > tf
  close(tf)
  command = inter " " tf
  return command
}
/^ / { gsub(/^ +/,"") }
/ $/ { gsub(/ +$/,"") }
{
  print "query", $0 > diag
}
/^#[a-zA-Z0-9-]+$/ {
  tag = $0
  gsub(/^#/,"",tag)
  print "read tag list", tag > diag
  command = "implementation/parseids tagindex/" tag ".md | sort -u" # really simple
  system(command)
}
/:/ { # test
  print ":" > diag
  split($0, arr, ":")
  for (n = 1; n <= length(arr); n++){
    print "cmd", n > diag
    print n, arr[n] > diag
    "mktemp" | getline temp
    close("mktemp")
    print "tempfile", temp > diag
    tempfiles[n] = temp
    print "relation element", arr[n] > diag
    command = interpretme(arr[n]) # write to temp file
    print "subcommand", command > diag
    bashcmd = "bash -c '" command " > " temp "'"
    print "bashcmd", bashcmd > diag
    system(bashcmd)
    print "done cmd", n > diag
    close(tempfiles[n])
  }
  # iterate through all temp files by id
  for (n = 1; n <= length(tempfiles); n++) {
    print "iterate", n > diag
    if (n < length(tempfiles)) {
      subcommand = "xargs -n 1 ./zc refs | sort -u"
    } else {
      subcommand = "sort -u"
    }
    print subcommand > diag
    found1 = 0
    while ((getline < tempfiles[n]) > 0) {
      print "processing", $0 > diag
      if (n == 1 || seen[$0]){
        print |& subcommand
        found1 = 1
        fflush(subcommand)
      }
    }
    print "done processing" > diag
    close(tempfiles[n])
    close(subcommand, "to")
    delete seen
    if (found1) {
      while ((subcommand |& getline) > 0) {
        if (n < length(tempfiles)) {
          seen[$0] = 1
          print "seen", $0 > diag
        } else print
      }
      close(subcommand, "from")
    }
    print "done iterate", n > diag
  }
  next
}
$(NF-1) == "~" {
  query=$NF
  print "start query", query > diag
  NF -= 2
  filtercommand = "xargs grep " query " | cut -d : -f 1 | implementation/parseids | sort -u"
  command = interpretme($0)
  while ((command | getline) > 0){
    if ($0 ~ /^[0-9]+$/) print "zet/" $0 "/README.md" |& filtercommand
  }
  print "like", query > diag
  close(command)
  print "done query", query > diag
  close(filtercommand, "to")
  while ((filtercommand |& getline) > 0) {
    print
  }
  close(filtercommand)
}
